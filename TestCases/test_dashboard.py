import os
import time
import re
import pytest
from pages.instance import InstancePage
from pages.login_page import LoginPage
from TestCases.conftest import setup_and_teardown
from selenium.webdriver import ActionChains
from pages.dashboard import Test_Login

@pytest.mark.usefixtures("setup_and_teardown")
class Test_Login_Dashboard_Page:
    def test_login_page_with_credentials(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        time.sleep(3)
        message = "Instances"
        assert login.verify_dashboard_page().__eq__(message)
        login.check_verify_dashboard_page()
        login.current_url()
        self.driver.save_screenshot("dashboard_page.png")
        self.driver.quit()

    def test_dashboard_location(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        time.sleep(2)
        message = "Location"
        assert login.verify_location().__eq__(message)
        login.check_verify_dashboard_location()
        login.location()
        login.current_url()
        self.driver.save_screenshot("location.png")
        self.driver.quit()

    def test_dashboard_location_dropdown(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(3)
        login.location_dropdown()
        login.current_url()
        self.driver.save_screenshot("dropdown_location.png")
        self.driver.quit()

    def test_dashboard_total_instance(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(2)
        login.location_dropdown()
        message = "INSTANCES"
        assert login.verify_instances().__eq__(message)
        login.check_verify_dashboard_instance()
        login.dashboard_total_intances()
        login.dashboard_up_instances()
        login.dashword_down_instance()
        login.verify_dashboard_instances()
        self.driver.save_screenshot("dashboard_instance_total.png")
        self.driver.quit()

    def test_services(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(2)
        login.location_dropdown()
        time.sleep(2)
        message = "SERVICES"
        assert login.verify_services_text().__eq__(message)
        login.check_verify_dashboard_services()
        login.service_total()
        login.service_ok()
        login.service_warn()
        login.service_crit()
        login.verify_total_service()
        self.driver.save_screenshot("dashboard_service_total.png")
        self.driver.quit()

    def test_tickets(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login = Test_Login(self.driver)
        login.location()
        time.sleep(3)
        login.location_dropdown()
        login.tickets()
        login.pending_tickets()
        login.closed_tickets()
        self.driver.save_screenshot("dashboard_total_tickets.png")
        self.driver.quit()


    def test_billing(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(3)
        login.location_dropdown()
        login.billing()
        billing_total = login.billing_total().text
        print(billing_total)

    def test_dashboard_instance_table_verify_instance_running_and_shutdown_state(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(1)
        login.location_dropdown()
        time.sleep(1)
        login.rows_per_page()
        time.sleep(1)
        login.rows_per_page_dropdown()
        time.sleep(1)
        login.verify_total_state()
        self.driver.save_screenshot("dashboard_running_and_shutdown_state.png")
        self.driver.quit()

    def test_dashboard_instance_table_state(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(2)
        login.location_dropdown()
        time.sleep(2)
        login.rows_per_page()
        time.sleep(2)
        login.rows_per_page_dropdown()
        time.sleep(3)
        login.dashboard_instance_state_button()
        # time.sleep(2)
        # login.dashboard_table_state()
        self.driver.quit()
    # #
    def test_dashboard_table(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login = Test_Login(self.driver)
        login.location()
        time.sleep(1)
        login.location_dropdown()
        time.sleep(1)
        login.rows_per_page()
        time.sleep(1)
        login.rows_per_page_dropdown()
        time.sleep(1)
        # login.dashboard_total_rows()
        # login.dashboard_total_columns()
        login.table_data()
        self.driver.save_screenshot("dashboard_table.png")
        self.driver.quit()


    def test_table_action_add_tag(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(2)
        login.location_dropdown()
        time.sleep(4)
        login.dashboard_instance_table_action_button_for_add_tags()
        message = "MANAGE TAGS"
        assert login.verify_table_actions_add_tags_page().__eq__(message)
        login.check_verify_dashboard_table_actions_add_tags_page()
        login.current_url()
        self.driver.save_screenshot("dashboard_action_add_tag.png")
        self.driver.quit()

    def test_table_action_edit_tag(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(2)
        login.location_dropdown()
        time.sleep(4)
        login.dashboard_instance_table_action_button_for_edit_tags()
        message = "MANAGE TAGS"
        assert login.verify_table_actions_add_tags_page().__eq__(message)
        login.check_verify_dashboard_table_actions_add_tags_page()
        login.current_url()
        self.driver.save_screenshot("dashboard_action_edit_tag.png")
        self.driver.quit()

    def test_table_action_edit_instance(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(2)
        login.location_dropdown()
        time.sleep(4)
        login.dashboard_instance_table_action_button_for_edit_instance()
        message = "Current Instance Name"
        login.verify_table_actions_edit_instance().__eq__(message)
        login.check_verify_dashboard_table_actions_edit_instance_page()
        login.current_url()
        self.driver.save_screenshot("dashboard_action_edit_instance.png")
        self.driver.quit()

    def test_table_action_performance(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(1)
        login.location_dropdown()
        time.sleep(1)
        login.dashboard_instance_table_action_button_for_Performance()
        message = "Graphs"
        assert login.verify_table_actions_performance().__eq__(message)
        time.sleep(3)
        login.graph_instance_button()
        time.sleep(2)
        login.graph_select_instance_check_box()
        time.sleep(2)
        login.graph_service_button()
        time.sleep(2)
        login.graph_service_dropdown_list()
        time.sleep(2)
        login.intervel_dropdown()
        time.sleep(2)
        login.graph_dropdown_listitems()
        time.sleep(2)
        login.graph_submit_button()
        time.sleep(10)
        login.verify_graph_instance()
        login.check_verify_dashboard_table_actions_performance_page()
        login.current_url()
        self.driver.save_screenshot("dashboard_action_performance.png")
        self.driver.quit()

    def test_table_action_assign_partner(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(2)
        login.location_dropdown()
        time.sleep(4)
        login.dashboard_instance_table_action_button_for_Assign_Partner()
        message = "Assigned Instances for Partner"
        assert login.verify_assigned_partner().__eq__(message)
        login.check_verify_dashboard_table_actions_assigned_partner_page()
        login.current_url()
        self.driver.save_screenshot("dashboard_action_assign_partner.png")
        self.driver.quit()


    def test_table_action_remove_partner(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(2)
        login.location_dropdown()
        time.sleep(2)
        login.dashboard_instance_table_action_button_for_remove_Partner()
        message = "Are you sure want to remove Partner ?"
        # yes_message = "Yes"
        # no_message = "No"
        assert login.verify_actions_remove_Partner().__eq__(message)
        # assert login.remove_Partner_ok().__eq__(yes_message)
        # assert login.remove_Partner_no().__eq__(no_message)
        login.check_verify_dashboard_table_actions_remove_partner_page()
        login.current_url()
        self.driver.save_screenshot("dashboard_action_remove_partner.png")
        self.driver.quit()

    def test_dashboard_instance_page(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(2)
        login.location_dropdown()
        time.sleep(3)
        login.dashboard_instance()
        # time.sleep(2)
        # message = "Instances"
        # login.dashboard_verify_instance_page().__eq__(message)
        login.current_url()
        time.sleep(3)
        self.driver.save_screenshot("instance_page.png")
        self.driver.quit()

    def test_dashboard_backup_page(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(2)
        login.location_dropdown()
        time.sleep(3)
        login.dashboard_backup()
        time.sleep(3)
        message = "JOBS HISTORY"
        assert login.dashboard_verify_backup_page().__eq__(message)
        login.current_url()
        self.driver.save_screenshot("backup_page.png")
        self.driver.quit()

    def test_dashboard_monitoring(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(5)
        login.location_dropdown()
        time.sleep(3)
        login.dashboard_monitoring_page()
        # message = "Services"
        # assert login.dashboard_monitoring_verify_page().__eq__(message)
        time.sleep(2)
        login.current_url()
        self.driver.save_screenshot("monitoring_page.png")
        self.driver.quit()


    def test_dashboard_Billing(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(2)
        login.location_dropdown()
        time.sleep(2)
        login.dashboard_billing()
        time.sleep(3)
        message = "Total Balance | ₹0"
        assert login.dashboard_billing_verify_page().__eq__(message)
        login.current_url()
        self.driver.save_screenshot("billing_page.png")
        self.driver.quit()


    def test_dash_board_report_page(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(1)
        login.location_dropdown()
        time.sleep(1)
        login.report_page()
        # message = "Bandwidth"
        # assert login.verify_reports_page().__eq__(message)
        login.current_url()
        self.driver.save_screenshot("report_page.png")
        self.driver.quit()

    def test_dashboard_service_warn(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(2)
        login.location_dropdown()
        login.dashboard_service_warn_button()
        time.sleep(2)
        login.service_warn_table_total_rows()
        time.sleep(2)
        login.service_warn_table_total_columns()
        time.sleep(2)
        login.service_warn_table_data()
        login.current_url()
        self.driver.save_screenshot("warn_report_table.png")
        self.driver.quit()



    def test_table_search(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(2)
        login.location_dropdown()
        time.sleep(2)
        login.table_search_ipaddress()
        time.sleep(2)
        login.table_search_enter_ipaddress("10.187.1.42")
        time.sleep(2)
        self.driver.save_screenshot("table_search_ip_address.png")
        self.driver.quit()

    def test_table_csv_report(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(2)
        login.location_dropdown()
        login.table_csv_report()
        time.sleep(3)
        self.driver.save_screenshot("dashboard_csv_report.png")

    def test_table_pdf_report(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(5)
        login.location_dropdown()
        time.sleep(5)
        login.table_pdf()
        time.sleep(3)
        current_url = self.driver.current_url
        print(current_url)
        self.driver.save_screenshot("table_pdf_report.png")
        self.driver.quit()


    def test_dashboard_main_search(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.dashboard_main_search_button()
        login.search_ip_address("10.193.32.5")
        time.sleep(2)
        current_url = self.driver.current_url
        print(current_url)
        self.driver.save_screenshot("dashboard_main_search.png")
        self.driver.quit()


    def test_question_mark(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        # time.sleep(3)
        login.dashboard_question_mark()
        time.sleep(4)
        login.current_url()
        self.driver.save_screenshot("dashboard_question_mark_page.png")
        self.driver.quit()

    def test_verify_dashboard_total_instance_page_total(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(2)
        login.location_dropdown()
        time.sleep(2)
        # login.service_total()
        # time.sleep(2)
        instance = InstancePage(self.driver)
        # instance.instance_page()
        # time.sleep(3)
        instance.verify_total_service()
        login.current_url()
        self.driver.save_screenshot("instances_page_total.png")
        self.driver.quit()

    def test_verify_dashboard_total_instance_page_ok(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(1)
        login.location_dropdown()
        time.sleep(1)
        # login.service_ok()
        # time.sleep(1)
        instance = InstancePage(self.driver)
        # time.sleep(3)
        # instance.instance_page()
        # time.sleep(3)
        # instance.instance_table_ok_button()
        instance.verify_instance_table_ok_and_dashboard_ok()
        login.current_url()
        self.driver.save_screenshot("instance_page_ok.png")
        self.driver.quit()

    def test_verify_dashboard_total_instance_page_warn(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(2)
        login.location_dropdown()
        time.sleep(2)
        login.service_warn()
        time.sleep(2)
        instance = InstancePage(self.driver)
        instance.instance_page()
        time.sleep(3)
        instance.instance_table_warn_button()
        login.current_url()
        self.driver.save_screenshot("instance_page_warn.png")
        self.driver.quit()

    def test_verify_dashboard_total_instance_page_crit(self):
        login_page = LoginPage(self.driver)
        login_page.email_address("abdul@gmail.com")
        login_page.email_address_password("Tulasi@1234")
        login_page.click_login()
        self.driver.implicitly_wait(10)
        login = Test_Login(self.driver)
        login.dashboard()
        login.location()
        time.sleep(2)
        login.location_dropdown()
        time.sleep(2)
        login.service_crit()
        time.sleep(2)
        instance = InstancePage(self.driver)
        time.sleep(3)
        instance.instance_page()
        time.sleep(3)
        instance.instance_table_crit_button()
        login.current_url()
        self.driver.save_screenshot("instance_page_crit.png")
        self.driver.quit()




